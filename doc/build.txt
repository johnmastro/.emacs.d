<!-- -*- mode: markdown -*- -->

# Nodes on building Emacs from source

## Linux

### Lucid on Fedora

    sudo dnf group install "C Development Tools and Libraries"
    sudo dnf group install "X Software Development"
    sudo dnf install m4 texinfo ncurses ncurses-devel \
        libxml2 libxml2-devel gnutls gnutls-devel zlib zlib-devel
        ImageMagick ImageMagick-devel
    ./autogen.sh all   # Only necessary if building from the repo
    ./configure --with-xml2 --with-zlib --with-gnutls --with-imagemagick \
        --with-x-toolkit=lucid --with-xft --with-libotf --with-m17n-flt \
        --without-pop --without-compress-install
    make
    sudo make install  # Optional

### GTK3 on Debian/Ubuntu

    sudo aptitude install build-essential pkg-config m4 \
        automake libtool texinfo install-info \
        libncurses-dev \
        libgtk-3-dev \
        libxml2 libxml2-dev \
        libgnutls28 libgnutls28-dev \
        zlib1g zlib1g-dev
    ./autogen.sh all    # Only necessary if building from the repo
    ./configure --with-xml2 --with-zlib --with-gnutls --with-x-toolkit=gtk3 \
        --without-pop --without-compress-install
    make
    sudo make install  # Optional

### No-X on Debian/Ubuntu

    sudo aptitude install build-essential pkg-config m4 \
        automake libtool texinfo install-info \
        libncurses-dev \
        libxml2 libxml2-dev \
        libgnutls28 libgnutls28-dev \
        zlib1g zlib1g-dev
    ./autogen.sh all   # Only necessary if building from the repo
    ./configure --with-xml2 --with-zlib --with-gnutls \
        --with-x-toolkit=no \
        --without-xpm --without-jpeg --without-tiff --without-gif --without-png
        --without-pop --without-compress-install
    make
    sudo make install  # Optional

## MacOS

It's possible that one or more of the `PKG_CONFIG_PATH`, `LDCFLAGS`, and
`CFLAGS` options aren't necessary. It's also possible that additional flags
should ideally be added to `CFLAGS`.

Note that `make install` doesn't actually Emacs, but it's necessary to finish
building the Emacs.app bundle.

    xcode-select --install  # Must be re-executed after Xcode upgrades
    brew install autoconf automake libxml2 gnutls imagemagick texinfo
    ./autogen.sh all
    PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig" ./configure \
        --with-ns --with-xml3 --with-zlib --with-gnutls --with-imagemagick \
        --without-dbus --without-pop --without-compress-install \
        LDFLAGS="-L /usr/local/opt/libxml2/lib" \
        CFLAGS="-pipe -march=nocona -O2 -g3 -I /usr/local/opt/libxml2/include"
    make
    make install
    make install-info

To invoke a GUI Emacs without installing, use `open nextstep/Emacs.app`. To
install, drop `Emacs.app` in `Applications`.

## Windows

If building from the repo, make sure the files have Unix-style line endings.
Make sure the tree is clean first, since we'll need to delete everything and
check it back out.

    cd /path/to/repo
    git config core.autocrlf false
    git rm --cached -r .
    git reset --hard

### MSYS2/MinGW-W64

- Run `msys2.exe` to open a shell
- Install dependencies:
  ```
  pacman -S \
    base-devel \
    mingw-w64-x86_64-toolchain \
    mingw-w64-x86_64-xpm-nox \
    mingw-w64-x86_64-libtiff \
    mingw-w64-x86_64-giflib \
    mingw-w64-x86_64-jbigkit \
    mingw-w64-x86_64-libpng \
    mingw-w64-x86_64-libjpeg-turbo \
    mingw-w64-x86_64-librsvg \
    mingw-w64-x86_64-libxml2 \
    mingw-w64-x86_64-gnutls
  ```
- Close the `msys2` shell and open `mingw64.exe`
- `cd` into the source directory
- Configure and build:
  ```
  ./autogen.sh all
  PKG_CONFIG_PATH=/mingw64/lib/pkgconfig \
    ./configure --prefix=/c/emacs/emacs-master \
      --with-zlib --with-gnutls --with-xml2 \
      --without-imagemagick --without-pop --without-compress-install
  make
  make install
  ```
- Copy the mingw64 DLLs to Emacs's `bin` directory so they don't have to be on
  $PATH when it runs:
  ```
  cp /mingw64/bin/*.dll /c/emacs/emacs-master/bin
  ```
- Or, try to copy only the DLLs Emacs needs, e.g.:
  ```
  cp /mingw64/bin/{libwinpthread-*.dll,libXpm-noX*.dll,libdbus-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libgomp-*.dll,libgcc_s_seh-*.dll,libglib-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libintl-*.dll,libiconv-*.dll,libgobject-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libffi-*.dll,libgdk_pixbuf-*.dll,libgio-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libgmodule-*.dll,zlib*.dll,librsvg-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libcairo-*.dll,libcroco-*.dll,libpango-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libpangocairo-*.dll,libxml2-*.dll,libfontconfig-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libfreetype-*.dll,libpixman-*.dll,libpng*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libpangoft*.dll,libpangowin32-*.dll,liblzma-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libexpat-*.dll,libharfbuzz-*.dll,libgnutls-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libgnutlsxx-*.dll,libtiff-*.dll,libtiffxx-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libjpeg-*.dll,libgif-*.dll,libbz2-*.dll,libjbig-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libgmp-*.dll,libhogweed-*.dll,libnettle-*.dll} /c/emacs/emacs-master/bin
  cp /mingw64/bin/{libp11-kit-*.dll,libtasn1-*.dll} /c/emacs/emacs-master/bin
  ```

### Cygwin --with-w32

- Use setup-x86_64.exe to install dependencies:
  - autoconf
  - automake
  - gcc-core
  - libncurses-devel
  - libxml2-devel
  - libgnutls-devel
  - zlib-devel
  - libjpeg-devel
  - libgif-devel
  - libpng-devel
  - libtiff-devel
- Build it:
  ```
  ./autogen.sh all   # Only necessary if building from the repo
  ./configure --with-w32 --with-xml2 --with-zlib --with-gnutls \
  --without-pop --without-compress-install
  make
  sudo make install  # Optional
  ```


<!-- Local Variables:            -->
<!-- whitespace-line-column: 100 -->
<!-- End:                        -->
